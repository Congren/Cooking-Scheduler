//
//  APIParserTests.swift
//  CookingScheduler
//
//  Created by Andrew Wang on 12/13/16.
//  Copyright Â© 2016 Andrew Wang. All rights reserved.
//

import XCTest
@testable import CookingScheduler

class APIParserTests: XCTestCase {
    
    override func setUp() {
        super.setUp()
        // Put setup code here. This method is called before the invocation of each test method in the class.
    }
    
    override func tearDown() {
        // Put teardown code here. This method is called after the invocation of each test method in the class.
        super.tearDown()
    }
    func testCreateRecipe() {
        let API = RecipeParser()
        let dict = ["id" : 5, "title" : "Cooking", "likes" : 1234, "missedIngredientCount" : 5, "image" : "Image"] as [String : Any]
        let newRecipe = API.createRecipe(info: dict)
        XCTAssertEqual(newRecipe?.id, 5)
        XCTAssertEqual(newRecipe?.title, "Cooking")
        XCTAssertEqual(newRecipe?.likes, 1234)
        XCTAssertEqual(newRecipe?.missedIngredients, 5)
        XCTAssertEqual(newRecipe?.imageUrl, "Image")
        // This is an example of a functional test case.
        // Use XCTAssert and related functions to verify your tests produce the correct results.
    }
    func testParseDictionary() {
        let length = 2048
        let bytes = "5b7b2269 64223a31 36333836 342c2274 69746c65 223a2247 72696c6c 65642048 65726220 53746561 6b73222c 22696d61 6765223a 22687474 70733a2f 2f73706f 6f6e6163 756c6172 2e636f6d 2f726563 69706549 6d616765 732f4772 696c6c65 642d4865 72622d53 7465616b 732d3136 33383634 2e6a7067 222c2269 6d616765 54797065 223a226a 7067222c 22757365 64496e67 72656469 656e7443 6f756e74 223a312c 226d6973 73656449 6e677265 6469656e 74436f75 6e74223a 322c226c 696b6573 223a307d 2c7b2269 64223a32 372c2274 69746c65 223a2243 6f6f6b20 74686520 426f6f6b 3a204272 61696465 64204265 65662077 69746820 416e6368 6f766965 7320616e 64204f6c 69766573 222c2269 6d616765 223a2268 74747073 3a2f2f73 706f6f6e 6163756c 61722e63 6f6d2f72 65636970 65496d61 6765732f 636f6f6b 2d746865 2d626f6f 6b2d6272 61696465 642d6265 65662d77 6974682d 616e6368 6f766965 732d616e 642d6f6c 69766573 2d322d32 372e6a70 67222c22 696d6167 65547970 65223a22 6a706722 2c227573 6564496e 67726564 69656e74 436f756e 74223a31 2c226d69 73736564 496e6772 65646965 6e74436f 756e7422 3a322c22 6c696b65 73223a30 7d2c7b22 6964223a 31363339 31362c22 7469746c 65223a22 4772696c 6c656420 50657374 6f2d5374 75666665 64205374 65616b73 222c2269 6d616765 223a2268 74747073 3a2f2f73 706f6f6e 6163756c 61722e63 6f6d2f72 65636970 65496d61 6765732f 4772696c 6c65642d 50657374 6f2d5374 75666665 642d5374 65616b73 2d313633 3931362e 6a706722 2c22696d 61676554 79706522 3a226a70 67222c22 75736564 496e6772 65646965 6e74436f 756e7422 3a312c22 6d697373 6564496e 67726564 69656e74 436f756e 74223a32 2c226c69 6b657322 3a307d2c 7b226964 223a3139 36373037 2c227469 746c6522 3a225468 65204172 74206f66 20456174 696e6727 73204361 72626f6e 61646520 c3a0206c 61204775 65757a65 222c2269 6d616765 223a2268 74747073 3a2f2f73 706f6f6e 6163756c 61722e63 6f6d2f72 65636970 65496d61 6765732f 5468652d 4172742d 6f662d45 6174696e 67732d43 6172626f 6e616465 2d2d6c61 2d477565 757a652d 31393637 30372e6a 7067222c 22696d61 67655479 7065223a 226a7067 222c2275 73656449 6e677265 6469656e 74436f75 6e74223a 312c226d 69737365 64496e67 72656469 656e7443 6f756e74 223a322c 226c696b 6573223a 34317d2c 7b226964 223a3539 30303432 2c227469 746c6522 3a224265 61757469 66756c20 436f7762 6f792043 6f6f6b69 6e6720e2 80932043 61737420 49726f6e 2050616e 7320616e 64204242 51205361 6c742043 72757374 65642046 69736822 2c22696d 61676522 3a226874 7470733a 2f2f7370 6f6f6e61 63756c61 722e636f 6d2f7265 63697065 496d6167 65732f42 65617574 6966756c 2d436f77 626f792d 436f6f6b 696e672d 2d436173 742d4972 6f6e2d50 616e732d 616e642d 4242512d 53616c74 2d437275 73746564 2d466973 682d3539 30303432 2e6a7067 222c2269 6d616765 54797065 223a226a 7067222c 22757365 64496e67 72656469 656e7443 6f756e74 223a312c 226d6973 73656449 6e677265 6469656e 74436f75 6e74223a 322c226c 696b6573 223a3635 7d2c7b22 6964223a 35393031 34382c22 7469746c 65223a22 45617379 2042616c 73616d69 632d476c 617a6564 2046696c 6574204d 69676e6f 6e222c22 696d6167 65223a22 68747470 733a2f2f 73706f6f 6e616375 6c61722e 636f6d2f 72656369 7065496d 61676573 2f456173 792d4261 6c73616d 69632d47 6c617a65 642d4669 6c65742d 4d69676e 6f6e2d35 39303134 382e6a70 67222c22 696d6167 65547970 65223a22 6a706722 2c227573 6564496e 67726564 69656e74 436f756e 74223a31 2c226d69 73736564 496e6772 65646965 6e74436f 756e7422 3a322c22 6c696b65 73223a39 37387d2c 7b226964 223a3938 3634382c 22746974 6c65223a 22546865 20506572 66656374 20427572 67657222 2c22696d 61676522 3a226874 7470733a 2f2f7370 6f6f6e61 63756c61 722e636f 6d2f7265 63697065 496d6167 65732f74 68652d70 65726665 63742d62 75726765 722d322d 39383634 382e706e 67222c22 696d6167 65547970 65223a22 706e6722 2c227573 6564496e 67726564 69656e74 436f756e 74223a31 2c226d69 73736564 496e6772 65646965 6e74436f 756e7422 3a322c22 6c696b65 73223a31 307d2c7b 22696422 3a363233 3031382c 22746974 6c65223a 22506570 70657263 6f726e20 616e6420 526f7365 6d617279 20437275 73746564 20507269 6d652052 6962222c 22696d61 6765223a 22687474 70733a2f 2f73706f 6f6e6163 756c6172 2e636f6d 2f726563 69706549 6d616765 732f5065 70706572 636f726e 2d616e64 2d526f73 656d6172 792d4372 75737465 642d5072 696d652d 5269622d 36323330 31382e6a 7067222c 22696d61 67655479 7065223a 226a7067 222c2275 73656449 6e677265 6469656e 74436f75 6e74223a 312c226d 69737365 64496e67 72656469 656e7443 6f756e74 223a322c 226c696b 6573223a 347d2c7b 22696422 3a313937 3136362c 22746974 6c65223a 22457373 656e7469 616c733a 2048616d 62757267 65727322 2c22696d 61676522 3a226874 7470733a 2f2f7370 6f6f6e61 63756c61 722e636f 6d2f7265 63697065 496d6167 65732f45 7373656e 7469616c 732d2d48 616d6275 72676572 732d3139 37313636 2e6a7067 222c2269 6d616765 54797065 223a226a 7067222c 22757365 64496e67 72656469 656e7443 6f756e74 223a312c 226d6973 73656449 6e677265 6469656e 74436f75 6e74223a 322c226c 696b6573 223a307d 2c7b2269 64223a31 36343430 352c2274 69746c65 223a2242 65656620 52696220 526f6173 74207769 74682059 6f726b73 68697265 20507564 64696e67 222c2269 6d616765 223a2268 74747073 3a2f2f73 706f6f6e 6163756c 61722e63 6f6d2f72 65636970 65496d61 6765732f 62656566 2d726962 2d726f61 73742d77 6974682d 796f726b 73686972 652d7075 6464696e 672d3136 34343035 2e6a7067 222c2269 6d616765 54797065 223a226a 7067222c 22757365 64496e67 72656469 656e7443 6f756e74 223a312c 226d6973 73656449 6e677265 6469656e 74436f75 6e74223a 322c226c 696b6573 223a307d 2c7b2269 64223a35 32343932 382c2274 69746c65 223a2233 2d496e67 72656469 656e7420 43726f63 6b20506f 74205361 6c736120 56657264 65204265 6566222c 22696d61 6765223a 22687474 70733a2f 2f73706f 6f6e6163 756c6172 2e636f6d 2f726563 69706549 6d616765 732f332d 496e6772 65646965 6e742d43 726f636b 2d506f74 2d53616c 73612d56 65726465 2d426565 662d3532 34393238 2e6a7067 222c2269 6d616765 54797065 223a226a 7067222c 22757365 64496e67 72656469 656e7443 6f756e74 223a312c 226d6973 73656449 6e677265 6469656e 74436f75 6e74223a 322c226c 696b6573 223a3631 7d2c7b22 6964223a 33393433 36322c22 7469746c 65223a22 50657070 65726564 20426565 66205465 6e646572 6c6f696e 222c2269 6d616765 223a2268 74747073 3a2f2f73 706f6f6e 6163756c 61722e63 6f6d2f72 65636970 65496d61 6765732f 50657070 65726564 2d426565 662d5465 6e646572 6c6f696e 2d333934 3336322e 6a706722 2c22696d 61676554 79706522 3a226a70 67222c22 75736564 496e6772 65646965 6e74436f 756e7422 3a312c22 6d697373 6564496e 67726564 69656e74 436f756e 74223a32 2c226c69 6b657322 3a307d2c 7b226964 223a3632 33393739 2c227469 746c6522 3a22536d 6f6b6564 20547269 2d546970 20776974 68205374 6f766574 6f702053 6d6f6b65 72222c22 696d6167 65223a22 68747470 733a2f2f 73706f6f 6e616375 6c61722e 636f6d2f 72656369 7065496d 61676573 2f536d6f 6b65642d 5472692d 5469702d 77697468 2d53746f 7665746f 702d536d 6f6b6572 2d363233 3937392e 6a706722 2c22696d 61676554 79706522 3a226a70 67222c22 75736564 496e6772 65646965 6e74436f 756e7422 3a312c22 6d697373 6564496e 67726564 69656e74 436f756e 74223a32 2c226c69 6b657322 3a33387d 2c7b2269 64223a31 36353232 382c2274 69746c65 223a224b 756d7175 61742061 6e642042 6179204c 65616620 54726565 222c2269 6d616765 223a2268 74747073 3a2f2f73 706f6f6e 6163756c 61722e63 6f6d2f72 65636970 65496d61 6765732f 4b756d71 7561742d 616e642d 4261792d 4c656166 2d547265 652d3136 35323238 2e6a7067 222c2269 6d616765 54797065 223a226a 7067222c 22757365 64496e67 72656469 656e7443 6f756e74 223a312c 226d6973 73656449 6e677265 6469656e 74436f75 6e74223a 322c226c 696b6573 223a307d 2c7b2269 64223a35 32353638 332c2274 69746c65 223a2246 726f6e74 65726120 42656566 20426172 6261636f 6120536c 6f772d43 6f6f6b69 6e672053 61756365 222c2269 6d616765 223a2268 74747073 3a2f2f73 706f6f6e 6163756c 61722e63 6f6d2f72 65636970 65496d61 6765732f 46726f6e 74657261 2d426565 662d4261 72626163 6f612d53 6c6f772d 436f6f6b 696e672d 53617563 652d3532 35363833 2e6a7067 222c2269 6d616765 54797065 223a226a 7067222c 22757365 64496e67 72656469 656e7443 6f756e74 223a312c 226d6973 73656449 6e677265 6469656e 74436f75 6e74223a 322c226c 696b6573 223a3131 367d2c7b 22696422 3a343630 3334332c 22746974 6c65223a 22596f72 6b736869 72652050 75646469 6e67222c 22696d61 6765223a 22687474 70733a2f 2f73706f 6f6e6163 756c6172 2e636f6d 2f726563 69706549 6d616765 732f596f 726b7368 6972652d 50756464 696e672d 34363033 34332e6a 7067222c 22696d61 67655479 7065223a 226a7067 222c2275 73656449 6e677265 6469656e 74436f75 6e74223a 312c226d 69737365 64496e67 72656469 656e7443 6f756e74 223a322c 226c696b 6573223a 377d2c7b 22696422 3a323936 3530352c 22746974 6c65223a 22526f61 73742042 65656620 77697468 20477261 7679222c 22696d61 6765223a 22687474 70733a2f 2f73706f 6f6e6163 756c6172 2e636f6d 2f726563 69706549 6d616765 732f726f 6173742d 62656566 2d776974 682d6772 6176792d 32393635 30352e6a 70656722 2c22696d 61676554 79706522 3a226a70 6567222c 22757365 64496e67 72656469 656e7443 6f756e74 223a312c 226d6973 73656449 6e677265 6469656e 74436f75 6e74223a 322c226c 696b6573 223a3137 7d2c7b22 6964223a 37353534 38332c22 7469746c 65223a22 54657269 79616b69 20426565 66222c22 696d6167 65223a22 68747470 733a2f2f 73706f6f 6e616375 6c61722e 636f6d2f 72656369 7065496d 61676573 2f746572 6979616b 692d6265 65662d37 35353438 332e6a70 6567222c 22696d61 67655479 7065223a 226a7065 67222c22 75736564 496e6772 65646965 6e74436f 756e7422 3a312c22 6d697373 6564496e 67726564 69656e74 436f756e 74223a32 2c226c69 6b657322 3a31337d 2c7b2269 64223a35 35393030 352c2274 69746c65 223a2253 75706572 2053696d 706c6520 536c6964 65727322 2c22696d 61676522 3a226874 7470733a 2f2f7370 6f6f6e61 63756c61 722e636f 6d2f7265 63697065 496d6167 65732f53 75706572 2d53696d 706c652d 536c6964 6572732d 35353930 30352e6a 7067222c 22696d61 67655479 7065223a 226a7067 222c2275 73656449 6e677265 6469656e 74436f75 6e74223a 312c226d 69737365 64496e67 72656469 656e7443 6f756e74 223a322c 226c696b 6573223a 3736397d 2c7b2269 64223a32 39363934 302c2274 69746c65 223a2242 65656620 53616c61 6d69222c 22696d61 6765223a 22687474 70733a2f 2f73706f 6f6e6163 756c6172 2e636f6d 2f726563 69706549 6d616765 732f4265 65662d53 616c616d 692d3239 36393430 2e6a7067 222c2269 6d616765 54797065 223a226a 7067222c 22757365 64496e67 72656469 656e7443 6f756e74 223a312c 226d6973 73656449 6e677265 6469656e 74436f75 6e74223a 322c226c 696b6573 223a307d 5d"
        let data = Data(bytes: bytes, count: length)
        let API = RecipeParser()
        let parsedDetails = API.parseDetails(data: data as NSData?)
        print (parsedDetails)
        //XCTAssertEqual(parsedDetails, )
        // This is an example of a functional test case.
        // Use XCTAssert and related functions to verify your tests produce the correct results.
    }
    func testParseDetails() {
        let length = 2048
        let bytes = "5b7b2269 64223a31 36333836 342c2274 69746c65 223a2247 72696c6c 65642048 65726220 53746561 6b73222c 22696d61 6765223a 22687474 70733a2f 2f73706f 6f6e6163 756c6172 2e636f6d 2f726563 69706549 6d616765 732f4772 696c6c65 642d4865 72622d53 7465616b 732d3136 33383634 2e6a7067 222c2269 6d616765 54797065 223a226a 7067222c 22757365 64496e67 72656469 656e7443 6f756e74 223a312c 226d6973 73656449 6e677265 6469656e 74436f75 6e74223a 322c226c 696b6573 223a307d 2c7b2269 64223a32 372c2274 69746c65 223a2243 6f6f6b20 74686520 426f6f6b 3a204272 61696465 64204265 65662077 69746820 416e6368 6f766965 7320616e 64204f6c 69766573 222c2269 6d616765 223a2268 74747073 3a2f2f73 706f6f6e 6163756c 61722e63 6f6d2f72 65636970 65496d61 6765732f 636f6f6b 2d746865 2d626f6f 6b2d6272 61696465 642d6265 65662d77 6974682d 616e6368 6f766965 732d616e 642d6f6c 69766573 2d322d32 372e6a70 67222c22 696d6167 65547970 65223a22 6a706722 2c227573 6564496e 67726564 69656e74 436f756e 74223a31 2c226d69 73736564 496e6772 65646965 6e74436f 756e7422 3a322c22 6c696b65 73223a30 7d2c7b22 6964223a 31363339 31362c22 7469746c 65223a22 4772696c 6c656420 50657374 6f2d5374 75666665 64205374 65616b73 222c2269 6d616765 223a2268 74747073 3a2f2f73 706f6f6e 6163756c 61722e63 6f6d2f72 65636970 65496d61 6765732f 4772696c 6c65642d 50657374 6f2d5374 75666665 642d5374 65616b73 2d313633 3931362e 6a706722 2c22696d 61676554 79706522 3a226a70 67222c22 75736564 496e6772 65646965 6e74436f 756e7422 3a312c22 6d697373 6564496e 67726564 69656e74 436f756e 74223a32 2c226c69 6b657322 3a307d2c 7b226964 223a3139 36373037 2c227469 746c6522 3a225468 65204172 74206f66 20456174 696e6727 73204361 72626f6e 61646520 c3a0206c 61204775 65757a65 222c2269 6d616765 223a2268 74747073 3a2f2f73 706f6f6e 6163756c 61722e63 6f6d2f72 65636970 65496d61 6765732f 5468652d 4172742d 6f662d45 6174696e 67732d43 6172626f 6e616465 2d2d6c61 2d477565 757a652d 31393637 30372e6a 7067222c 22696d61 67655479 7065223a 226a7067 222c2275 73656449 6e677265 6469656e 74436f75 6e74223a 312c226d 69737365 64496e67 72656469 656e7443 6f756e74 223a322c 226c696b 6573223a 34317d2c 7b226964 223a3539 30303432 2c227469 746c6522 3a224265 61757469 66756c20 436f7762 6f792043 6f6f6b69 6e6720e2 80932043 61737420 49726f6e 2050616e 7320616e 64204242 51205361 6c742043 72757374 65642046 69736822 2c22696d 61676522 3a226874 7470733a 2f2f7370 6f6f6e61 63756c61 722e636f 6d2f7265 63697065 496d6167 65732f42 65617574 6966756c 2d436f77 626f792d 436f6f6b 696e672d 2d436173 742d4972 6f6e2d50 616e732d 616e642d 4242512d 53616c74 2d437275 73746564 2d466973 682d3539 30303432 2e6a7067 222c2269 6d616765 54797065 223a226a 7067222c 22757365 64496e67 72656469 656e7443 6f756e74 223a312c 226d6973 73656449 6e677265 6469656e 74436f75 6e74223a 322c226c 696b6573 223a3635 7d2c7b22 6964223a 35393031 34382c22 7469746c 65223a22 45617379 2042616c 73616d69 632d476c 617a6564 2046696c 6574204d 69676e6f 6e222c22 696d6167 65223a22 68747470 733a2f2f 73706f6f 6e616375 6c61722e 636f6d2f 72656369 7065496d 61676573 2f456173 792d4261 6c73616d 69632d47 6c617a65 642d4669 6c65742d 4d69676e 6f6e2d35 39303134 382e6a70 67222c22 696d6167 65547970 65223a22 6a706722 2c227573 6564496e 67726564 69656e74 436f756e 74223a31 2c226d69 73736564 496e6772 65646965 6e74436f 756e7422 3a322c22 6c696b65 73223a39 37387d2c 7b226964 223a3938 3634382c 22746974 6c65223a 22546865 20506572 66656374 20427572 67657222 2c22696d 61676522 3a226874 7470733a 2f2f7370 6f6f6e61 63756c61 722e636f 6d2f7265 63697065 496d6167 65732f74 68652d70 65726665 63742d62 75726765 722d322d 39383634 382e706e 67222c22 696d6167 65547970 65223a22 706e6722 2c227573 6564496e 67726564 69656e74 436f756e 74223a31 2c226d69 73736564 496e6772 65646965 6e74436f 756e7422 3a322c22 6c696b65 73223a31 307d2c7b 22696422 3a363233 3031382c 22746974 6c65223a 22506570 70657263 6f726e20 616e6420 526f7365 6d617279 20437275 73746564 20507269 6d652052 6962222c 22696d61 6765223a 22687474 70733a2f 2f73706f 6f6e6163 756c6172 2e636f6d 2f726563 69706549 6d616765 732f5065 70706572 636f726e 2d616e64 2d526f73 656d6172 792d4372 75737465 642d5072 696d652d 5269622d 36323330 31382e6a 7067222c 22696d61 67655479 7065223a 226a7067 222c2275 73656449 6e677265 6469656e 74436f75 6e74223a 312c226d 69737365 64496e67 72656469 656e7443 6f756e74 223a322c 226c696b 6573223a 347d2c7b 22696422 3a313937 3136362c 22746974 6c65223a 22457373 656e7469 616c733a 2048616d 62757267 65727322 2c22696d 61676522 3a226874 7470733a 2f2f7370 6f6f6e61 63756c61 722e636f 6d2f7265 63697065 496d6167 65732f45 7373656e 7469616c 732d2d48 616d6275 72676572 732d3139 37313636 2e6a7067 222c2269 6d616765 54797065 223a226a 7067222c 22757365 64496e67 72656469 656e7443 6f756e74 223a312c 226d6973 73656449 6e677265 6469656e 74436f75 6e74223a 322c226c 696b6573 223a307d 2c7b2269 64223a31 36343430 352c2274 69746c65 223a2242 65656620 52696220 526f6173 74207769 74682059 6f726b73 68697265 20507564 64696e67 222c2269 6d616765 223a2268 74747073 3a2f2f73 706f6f6e 6163756c 61722e63 6f6d2f72 65636970 65496d61 6765732f 62656566 2d726962 2d726f61 73742d77 6974682d 796f726b 73686972 652d7075 6464696e 672d3136 34343035 2e6a7067 222c2269 6d616765 54797065 223a226a 7067222c 22757365 64496e67 72656469 656e7443 6f756e74 223a312c 226d6973 73656449 6e677265 6469656e 74436f75 6e74223a 322c226c 696b6573 223a307d 2c7b2269 64223a35 32343932 382c2274 69746c65 223a2233 2d496e67 72656469 656e7420 43726f63 6b20506f 74205361 6c736120 56657264 65204265 6566222c 22696d61 6765223a 22687474 70733a2f 2f73706f 6f6e6163 756c6172 2e636f6d 2f726563 69706549 6d616765 732f332d 496e6772 65646965 6e742d43 726f636b 2d506f74 2d53616c 73612d56 65726465 2d426565 662d3532 34393238 2e6a7067 222c2269 6d616765 54797065 223a226a 7067222c 22757365 64496e67 72656469 656e7443 6f756e74 223a312c 226d6973 73656449 6e677265 6469656e 74436f75 6e74223a 322c226c 696b6573 223a3631 7d2c7b22 6964223a 33393433 36322c22 7469746c 65223a22 50657070 65726564 20426565 66205465 6e646572 6c6f696e 222c2269 6d616765 223a2268 74747073 3a2f2f73 706f6f6e 6163756c 61722e63 6f6d2f72 65636970 65496d61 6765732f 50657070 65726564 2d426565 662d5465 6e646572 6c6f696e 2d333934 3336322e 6a706722 2c22696d 61676554 79706522 3a226a70 67222c22 75736564 496e6772 65646965 6e74436f 756e7422 3a312c22 6d697373 6564496e 67726564 69656e74 436f756e 74223a32 2c226c69 6b657322 3a307d2c 7b226964 223a3632 33393739 2c227469 746c6522 3a22536d 6f6b6564 20547269 2d546970 20776974 68205374 6f766574 6f702053 6d6f6b65 72222c22 696d6167 65223a22 68747470 733a2f2f 73706f6f 6e616375 6c61722e 636f6d2f 72656369 7065496d 61676573 2f536d6f 6b65642d 5472692d 5469702d 77697468 2d53746f 7665746f 702d536d 6f6b6572 2d363233 3937392e 6a706722 2c22696d 61676554 79706522 3a226a70 67222c22 75736564 496e6772 65646965 6e74436f 756e7422 3a312c22 6d697373 6564496e 67726564 69656e74 436f756e 74223a32 2c226c69 6b657322 3a33387d 2c7b2269 64223a31 36353232 382c2274 69746c65 223a224b 756d7175 61742061 6e642042 6179204c 65616620 54726565 222c2269 6d616765 223a2268 74747073 3a2f2f73 706f6f6e 6163756c 61722e63 6f6d2f72 65636970 65496d61 6765732f 4b756d71 7561742d 616e642d 4261792d 4c656166 2d547265 652d3136 35323238 2e6a7067 222c2269 6d616765 54797065 223a226a 7067222c 22757365 64496e67 72656469 656e7443 6f756e74 223a312c 226d6973 73656449 6e677265 6469656e 74436f75 6e74223a 322c226c 696b6573 223a307d 2c7b2269 64223a35 32353638 332c2274 69746c65 223a2246 726f6e74 65726120 42656566 20426172 6261636f 6120536c 6f772d43 6f6f6b69 6e672053 61756365 222c2269 6d616765 223a2268 74747073 3a2f2f73 706f6f6e 6163756c 61722e63 6f6d2f72 65636970 65496d61 6765732f 46726f6e 74657261 2d426565 662d4261 72626163 6f612d53 6c6f772d 436f6f6b 696e672d 53617563 652d3532 35363833 2e6a7067 222c2269 6d616765 54797065 223a226a 7067222c 22757365 64496e67 72656469 656e7443 6f756e74 223a312c 226d6973 73656449 6e677265 6469656e 74436f75 6e74223a 322c226c 696b6573 223a3131 367d2c7b 22696422 3a343630 3334332c 22746974 6c65223a 22596f72 6b736869 72652050 75646469 6e67222c 22696d61 6765223a 22687474 70733a2f 2f73706f 6f6e6163 756c6172 2e636f6d 2f726563 69706549 6d616765 732f596f 726b7368 6972652d 50756464 696e672d 34363033 34332e6a 7067222c 22696d61 67655479 7065223a 226a7067 222c2275 73656449 6e677265 6469656e 74436f75 6e74223a 312c226d 69737365 64496e67 72656469 656e7443 6f756e74 223a322c 226c696b 6573223a 377d2c7b 22696422 3a323936 3530352c 22746974 6c65223a 22526f61 73742042 65656620 77697468 20477261 7679222c 22696d61 6765223a 22687474 70733a2f 2f73706f 6f6e6163 756c6172 2e636f6d 2f726563 69706549 6d616765 732f726f 6173742d 62656566 2d776974 682d6772 6176792d 32393635 30352e6a 70656722 2c22696d 61676554 79706522 3a226a70 6567222c 22757365 64496e67 72656469 656e7443 6f756e74 223a312c 226d6973 73656449 6e677265 6469656e 74436f75 6e74223a 322c226c 696b6573 223a3137 7d2c7b22 6964223a 37353534 38332c22 7469746c 65223a22 54657269 79616b69 20426565 66222c22 696d6167 65223a22 68747470 733a2f2f 73706f6f 6e616375 6c61722e 636f6d2f 72656369 7065496d 61676573 2f746572 6979616b 692d6265 65662d37 35353438 332e6a70 6567222c 22696d61 67655479 7065223a 226a7065 67222c22 75736564 496e6772 65646965 6e74436f 756e7422 3a312c22 6d697373 6564496e 67726564 69656e74 436f756e 74223a32 2c226c69 6b657322 3a31337d 2c7b2269 64223a35 35393030 352c2274 69746c65 223a2253 75706572 2053696d 706c6520 536c6964 65727322 2c22696d 61676522 3a226874 7470733a 2f2f7370 6f6f6e61 63756c61 722e636f 6d2f7265 63697065 496d6167 65732f53 75706572 2d53696d 706c652d 536c6964 6572732d 35353930 30352e6a 7067222c 22696d61 67655479 7065223a 226a7067 222c2275 73656449 6e677265 6469656e 74436f75 6e74223a 312c226d 69737365 64496e67 72656469 656e7443 6f756e74 223a322c 226c696b 6573223a 3736397d 2c7b2269 64223a32 39363934 302c2274 69746c65 223a2242 65656620 53616c61 6d69222c 22696d61 6765223a 22687474 70733a2f 2f73706f 6f6e6163 756c6172 2e636f6d 2f726563 69706549 6d616765 732f4265 65662d53 616c616d 692d3239 36393430 2e6a7067 222c2269 6d616765 54797065 223a226a 7067222c 22757365 64496e67 72656469 656e7443 6f756e74 223a312c 226d6973 73656449 6e677265 6469656e 74436f75 6e74223a 322c226c 696b6573 223a307d 5d"
        let data = Data(bytes: bytes, count: length)
        let API = RecipeParser()
        let parsedDetails = API.parseDictionary(data: data as NSData?)
        print (parsedDetails)
        //XCTAssertEqual(parsedDetails, )
        // This is an example of a functional test case.
        // Use XCTAssert and related functions to verify your tests produce the correct results.
    }
    func testGetIngredient() {
        let API = RecipeParser()
        let dict = ["id" : 4, "name" : "Broccoli", "amount" : 5, "unit" : "Pieces"] as [String : Any]
        let newRecipe = API.getIngredient(info: dict)
        XCTAssertEqual(newRecipe?.id, 4)
        XCTAssertEqual(newRecipe?.name, "Broccoli")
        XCTAssertEqual(newRecipe?.ingredientDetails, 5)
        XCTAssertEqual(newRecipe?.ingredientUnits, "Pieces")
        // This is an example of a functional test case.
        // Use XCTAssert and related functions to verify your tests produce the correct results.
    }
    func testCreateRecipeDetails() {
        let API = RecipeParser()
        let cuisineArray : [String] = ["Meat", "Bread"]
        let ingre = [["id" : 4, "name" : "Broccoli", "amount" : 5, "unit" : "Pieces"] as [String : Any]]
        let dict = ["id" : 4, "title" : "Broccoli", "readyInMinutes" : 50, "instructions" : "test", "extendedIngredients" : ingre, "cuisines" : cuisineArray, "spoonacularSourceUrl" : "url"] as [String : Any]
        let newRecipe = API.createRecipeDetails(info: dict)
        XCTAssertEqual(newRecipe?.id, 4)
        XCTAssertEqual(newRecipe?.title, "Broccoli")
        XCTAssertEqual(newRecipe?.cookTime, 50)
        XCTAssertEqual(newRecipe?.instructions, "test")
        XCTAssertTrue(newRecipe?.ingredients.count == 1)
        XCTAssertEqual((newRecipe?.cuisines)!, cuisineArray)
        XCTAssertEqual(newRecipe?.url, "url")

        // This is an example of a functional test case.
        // Use XCTAssert and related functions to verify your tests produce the correct results.
    }
}
